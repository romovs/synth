//.nemo-window GtkEventBox { background-color: $bg_color; } // fixes nemo statusbar

filechooser paned > separator { background-image: _solid($dark_sidebar_border); }

// Dark transparent sidebars
.nautilus-window {

  &.csd.background, placessidebar list { background-color: transparent; }

  placessidebar.sidebar {
    box-shadow: inset 38px 0 0 0 $dark_sidebar_icon_bg;
    background-color: $dark_sidebar_bg;

    row.sidebar-row {
      transition: none;
      color: $dark_sidebar_fg;

      .sidebar-icon { color: transparentize($dark_sidebar_icon_fg, 0.15); }

      image.sidebar-icon {
         padding-right: 2px;
      }

      label.sidebar-label {
        padding-right: 2px; padding-left: $small_size + 4px;
      }

      &.has-open-popup,
      &:hover {
        background-color: transparentize($dark_sidebar_fg, 0.95);
        box-shadow: inset -2px 0 lighten($selected_bg_color, 10%),
                    inset 38px 0 0 0 $dark_sidebar_icon_bg;
      }

      &:disabled {
        &, label, image { color: transparentize($dark_sidebar_fg, 0.6); }
      }

      &:active { transition: box-shadow 0.2s; }

      &:selected.has-open-popup,
      &:selected, &:selected:hover, &:active:hover {
        box-shadow: inset 38px 0 0 0 $selected_bg_color;
        background-color: rgba($selected_bg_color, 0.0);
        background-image: -gtk-scaled(url("assets/selected-dot.png"),
                                      url("assets/selected-dot@2.png"));
        background-repeat: no-repeat;
        background-position: 42px center;
        .sidebar-label { color: $alt_dark_sidebar_fg; }
//        .sidebar-icon { color: inherit; }
      }

      &:selected:hover, &:active:hover {
        background-color: transparentize($dark_sidebar_fg, 0.95);
        box-shadow: inset -2px 0 lighten($selected_bg_color, 10%),
                    inset 38px 0 0 0 $selected_bg_color;
        background-image: -gtk-scaled(url("assets/selected-dot.png"),
                                      url("assets/selected-dot@2.png"));
        background-repeat: no-repeat;
        background-position: 42px center;
      }

      button.sidebar-button {
        color: $dark_sidebar_fg;

        &:hover { @include button(hover); }
        &:active { @include button(active); }

        &:not(:hover):not(:active) > image { opacity: 0.5 };
      }

      &.sidebar-new-bookmark-row {
        color: $selected_bg_color;

//        .sidebar-icon { color: inherit; }
      }

     &:backdrop { opacity: 0.75; }

      &:drop(active):not(:disabled) {
        &, label, .sidebar-icon { color: $drop_target_color; }

        &:selected {
          &, label, .sidebar-icon { color: $selected_fg_color; }
          background-color: $drop_target_color;
        }
      }
    }

    separator { background-color: transparent; }

    scrollbar { @extend %dark_sidebar_scrollbar }
  }

  &.maximized placessidebar.sidebar { background-color: opacify($dark_sidebar_bg, 1); }
}

.nemo-window {
  .sidebar {
    color: $dark_sidebar_fg;
    background-color: $dark_sidebar_bg;

    .view, row {
      background-color: transparent;
      color: $dark_sidebar_fg;

      &.cell:selected {
        background-color: $selected_bg_color;
        color: $selected_fg_color;
      }

      &.expander {
        color: mix($dark_sidebar_fg, $dark_sidebar_bg, 50%);

        &:hover { color: $dark_sidebar_fg; }
      }
    }

    separator { background-color: transparent; }

    scrollbar { @extend %dark_sidebar_scrollbar }
  }
}

.caja-side-pane {

  &,
  > notebook > stack > widget > box,
  text,
  treeview {
    color: $dark_sidebar_fg;
    caret-color: $dark_sidebar_fg;
    background-color: opacify($dark_sidebar_bg, 1);
  }

  > box button {
    &:not(:active):not(:checked) { color: $dark_sidebar_fg; }
    &:hover:not(:active) { @extend %dark_sidebar_button:hover; }
  }

  .frame { border-color: $solid_borders_color; }

  scrollbar { @extend %dark_sidebar_scrollbar; }
  junction { background-color: darken($dark_sidebar_bg, 5%); }
}

filechooser {

  actionbar {
    color: $dark_sidebar_fg;
    background-color: $dark_sidebar_bg;
    border-color: $solid_borders_color;

    button { @extend %dark_sidebar_button; }
    entry { @extend %dark_sidebar_entry; }

    @extend %osd_check_radio;

    label, combobox { color: $dark_sidebar_fg; }
  }
}

// Gedit
.gedit-bottom-panel-paned { background-color: $base_color; }

.gedit-side-panel-paned > separator { background-image: _solid($dark_sidebar_border); }
.gedit-bottom-panel-paned > separator { background-image: _solid($borders_color); }

.gedit-document-panel {
  background-color: $dark_sidebar_bg;

  .maximized & { background-color: opacify($dark_sidebar_bg, 1); }

  row {
    color: $dark_sidebar_fg;
    background-color: transparentize($dark_sidebar_fg, 1);

    &:hover {
      background-color: transparentize($dark_sidebar_fg, 0.85);
    }
    &:active {
      color: $selected_fg_color;
      background-color: $selected_bg_color;

      button { color: $selected_fg_color; }
    }
    &:selected, &:selected:hover {
      color: $selected_fg_color;
      background-color: $selected_bg_color;
    }
    &:hover:not(:selected) button:active {
      color: $dark_sidebar_fg;
    }
  }
}

%dark_sidebar_button {
  @include button(normal);

  &:hover { @include button(hover); }
  &:active, &:checked { @include button(active); }
  &:disabled { @include button(insensitive); }
}

%dark_sidebar_entry {
  @include entry(normal);

  &:focus { @include entry(focus); }
  &:disabled { @include entry(insensitive); }
}

%dark_sidebar_scrollbar {

  border-color: $borders_color;

  &.overlay-indicator:not(.dragging):not(.hovering) slider {
    background-color: lighten($dark_sidebar_fg, 15%);
    border: 1px solid $borders_color;
  }
  slider {
    background-color: transparentize(lighten($dark_sidebar_fg, 15%), 0.3);

    &:hover { background-color: lighten($dark_sidebar_fg, 20%); }

    &:hover:active { background-color: $selected_bg_color; }

    &:disabled {
      background-color: transparent;
    }
  }
  trough {
    background-color: darken($dark_sidebar_bg, 5%);
  }
}
